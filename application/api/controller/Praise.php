<?php
// +----------------------------------------------------------------------
// | ThinkCMF [ WE CAN DO IT MORE SIMPLE ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013-2018 http://www.thinkcmf.com All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: Powerless < wzxaini9@gmail.com>
// +----------------------------------------------------------------------
namespace app\api\controller;

use think\Db;

/**
 * 点赞相关类
 * Class PraiseController
 * @package app\api\controller
 */
class Praise extends Apibase
{
    protected $model = '';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = model('praise');
    }

    /**
     * 点赞
     * @param int user_id 点赞id
     * @param int dynamic_id 动态id
     */
    public function praise(){
        $param = request()->param();
        $validate = $this->validate($param, [
            'user_id' => 'integer|require',
            'dynamic_id' => 'integer|require',
        ]);
        if ($validate !== true)
            $this->paramError($validate);
        $dynamic = model('dynamic')->where(['dynamic_id'=>$param['dynamic_id'],'dynamic_status'=>1])->find();
        if(!$dynamic){
            $this->apiReturn('1002','动态不存在或已被屏蔽','');
        }
        $praise = $this->model->where(['dynamic_id'=>$param['dynamic_id'],'user_id'=>$param['user_id']])->find();
        if($praise){
            $this->apiReturn('1002','您已经点过赞了，不能重复点赞','');
        }
        $param['praise_add_time'] = time();
        Db::startTrans();//开启事务
        $result1 = $this->model->allowField(true)->save($param);
        $result2 = model('dynamic')->where(['dynamic_id'=>$param['dynamic_id'],'dynamic_status'=>1])->setInc('dynamic_praise');
        if($result1 && $result2){
            Db::commit();
            $this->apiReturn('1001','成功','');
        }else{
            Db::rollback();
            $this->apiReturn('1002','失败','');
        }
    }
}
