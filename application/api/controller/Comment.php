<?php
// +----------------------------------------------------------------------
// | ThinkCMF [ WE CAN DO IT MORE SIMPLE ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013-2018 http://www.thinkcmf.com All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: Powerless < wzxaini9@gmail.com>
// +----------------------------------------------------------------------
namespace app\api\controller;

use think\Db;
use app\common\logic\UsersLogic;

class Comment extends Apibase
{
    //protected $model = '';

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //$this->model = Db::name('comment');
    }

    /**
     * 发布评论（订单评论和动态评论都在这里）
     * @param int user_id 发布评论人id
     * @param int comment_pid 被回复的评论id，非必传
     * @param int comment_obj_id 评论对象id，包含动态id，订单商品id（注意这里是订单下面的商品表id）
     * @param int comment_type 评论对象类型，0为动态评论，1为订单评价
     * @param string comment_content 评论内容
     * @param int comment_score 评论分数，1-5分，订单评价时必传
     */
    public function release_comment(){
        $param = request()->param();
        $validate = $this->validate($param, [
            'user_id' => 'integer|require',
            'comment_pid' => 'integer',
            'comment_obj_id' => 'integer|require',
            'comment_type' => 'in:0,1|require',
            'comment_content' => 'require',
            'comment_score' => 'in:1,2,3,4,5',
        ]);
        if ($validate !== true)
            $this->paramError($validate);
        $user = model('users')->find($param['user_id']);
        if(!$user){
            $this->apiReturn('1002','非法操作','');
        }
        if($param['comment_type'] == 0){
            if(isset($param['comment_pid']) && $param['comment_pid']){
                $passive_comment = Db::name('dynamic_comment')->where(['comment_id'=>$param['comment_pid'],'comment_status'=>1])->find();
                if(!$passive_comment){
                    $this->apiReturn('1002','被回复的评论不存在或已被屏蔽','');
                }
                $param['to_user_id'] = $passive_comment['user_id'];//被回复的用户id
                Db::name('dynamic_comment')->where(['comment_id'=>$param['comment_pid'],'comment_status'=>1])->setInc('comment_replay_num');//被回复数加一
            }
            model('dynamic')->where(['dynamic_id'=>$param['comment_obj_id']])->setInc('dynamic_comment');
            $param['dynamic_id'] = $param['comment_obj_id'];
            $param['comment_add_time'] = time();
            $result = Db::name('dynamic_comment')->save($param);
            if($result){
                $this->apiReturn('1001','成功','');
            }else{
                $this->apiReturn('1002','失败','');
            }
        }else{//如果是订单评价
            $order_goods = model('order_goods')->where(['rec_id'=>$param['comment_obj_id']])->find();
            $logic = new UsersLogic();
            $add['rec_id'] = $param['rec_id'];
            $add['goods_id'] = $order_goods['goods_id'];
            $add['email'] = $user['email'];
            $add['username'] = $user['nickname'];
            $add['order_id'] = $order_goods['order_id'];
            $add['goods_rank'] = $param['comment_score'];
            $add['is_show'] = 1; //默认显示
            $add['content'] = $param['comment_content'];
            $add['add_time'] = time();
            $add['ip_address'] = request()->ip();
            $add['user_id'] = $param['user_id'];

            //添加评论
            $row = $logic->add_comment($add);
            model('order')->update(['order_id'=>$order_goods['order_id']],['order_status'=>4]);//订单状态修改为已评价
            if ($row['status'] == 1) {
                $this->apiReturn('1001','成功','');
            } else {
                $this->apiReturn('1002',$row['msg'],'');
            }
        }
    }
    /**
     * 动态评论列表
     * @param int dynamic_id 动态id
     */
    function comment_lists()
    {
        $param = request()->param();
        $validate = $this->validate($param, [
            'dynamic_id' => 'integer|require',
        ]);
        if ($validate !== true)
            $this->paramError($validate);
        $lists = Db::name('dynamic_comment')->alias('a')->
        join([
            ['dynamic_comment b', 'a.comment_pid = b.comment_id', 'LEFT'],
            ['users c', 'a.user_id = c.user_id'],
            ['users d', 'a.to_user_id = d.user_id','LEFT']
        ])->
        field('a.*,c.head_pic,c.nickname,d.nickname as passive_user_nickname,b.comment_content as passive_comment_content')->
        where(['a.dynamic_id' => $param['dynamic_id'], 'a.comment_status' => 1])->
        order('a.comment_id desc')->select();

        $this->apiReturn('1001','成功',$lists);
    }
}
